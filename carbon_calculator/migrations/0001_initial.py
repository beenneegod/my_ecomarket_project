# Generated by Django 5.2 on 2025-06-03 13:11

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('store', '0019_alter_profile_avatar'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ActivityCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название категории')),
                ('slug', models.SlugField(blank=True, max_length=110, unique=True, verbose_name='Slug (для URL)')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание категории')),
                ('icon_class', models.CharField(blank=True, max_length=50, null=True, verbose_name='Класс иконки (напр., Bootstrap Icons)')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок отображения')),
            ],
            options={
                'verbose_name': 'Категория активности',
                'verbose_name_plural': 'Категории активностей',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='EmissionFactor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Внутреннее название фактора/активности')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Детальное описание фактора (для админа)')),
                ('unit_name', models.CharField(max_length=50, verbose_name='Единица измерения для расчета CO2')),
                ('co2_kg_per_unit', models.DecimalField(decimal_places=6, max_digits=12, verbose_name='Выбросы CO2 (кг) на единицу')),
                ('data_source_info', models.TextField(blank=True, null=True, verbose_name='Источник данных для коэффициента (отчет, год)')),
                ('valid_from', models.DateField(blank=True, null=True, verbose_name='Действителен с')),
                ('valid_to', models.DateField(blank=True, null=True, verbose_name='Действителен до')),
                ('form_question_text', models.TextField(verbose_name='Текст вопроса для пользователя в форме')),
                ('form_field_type', models.CharField(choices=[('number', 'Числовое поле'), ('select', 'Выпадающий список')], default='number', max_length=20, verbose_name='Тип поля в форме')),
                ('form_field_options', models.JSONField(blank=True, help_text='Для "select": {"option_value1": "Ярлык опции 1", "option_value2": "Ярлык опции 2"}. Значение - это множитель для co2_kg_per_unit или само значение для расчета.', null=True, verbose_name="Опции для поля 'select' (JSON)")),
                ('form_placeholder', models.CharField(blank=True, max_length=100, null=True, verbose_name='Placeholder для числового поля')),
                ('form_help_text', models.TextField(blank=True, null=True, verbose_name='Подсказка к полю в форме')),
                ('periodicity_options_for_form', models.JSONField(blank=True, help_text='Пример: {"per_week": {"label": "в неделю", "annual_multiplier": 52}, "per_month": {"label": "в месяц", "annual_multiplier": 12}}. Если пусто, предполагается годовой ввод или указано в unit_name.', null=True, verbose_name='Опции периодичности для ввода (JSON)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен (использовать в калькуляторе)')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок вопроса в категории')),
                ('activity_category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='factors', to='carbon_calculator.activitycategory', verbose_name='Категория активности')),
            ],
            options={
                'verbose_name': 'Фактор выбросов',
                'verbose_name_plural': 'Факторы выбросов',
                'ordering': ['activity_category__order', 'activity_category__name', 'order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ReductionTip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок совета')),
                ('description_template', models.TextField(help_text='Используйте плейсхолдеры: {{user_input_X}} для значения по фактору X, {{annual_emission_category_Y}} для выбросов по категории Y, {{potential_annual_savings_kg}} для расчетной экономии.', verbose_name='Шаблон описания совета')),
                ('trigger_conditions_json', models.JSONField(blank=True, help_text='Описывает, когда совет релевантен. Если пусто, совет показывается всегда (если активен).', null=True, verbose_name='Условия для показа совета (JSON)')),
                ('estimated_co2_reduction_kg_annual_logic', models.JSONField(blank=True, null=True, verbose_name='Логика расчета примерного годового снижения CO2 (JSON)')),
                ('priority', models.PositiveIntegerField(default=0, verbose_name='Приоритет (чем выше, тем важнее)')),
                ('external_link_url', models.URLField(blank=True, null=True, verbose_name='Внешняя ссылка (на статью, источник)')),
                ('external_link_text', models.CharField(blank=True, max_length=200, null=True, verbose_name='Текст для внешней ссылки')),
                ('icon_class', models.CharField(blank=True, max_length=50, null=True, verbose_name='Класс иконки для совета')),
                ('is_active', models.BooleanField(default=True, verbose_name='Совет активен')),
                ('applies_to_categories', models.ManyToManyField(blank=True, help_text='Если указано, совет будет показан, если есть выбросы в этих категориях (можно уточнить в trigger_conditions_json)', to='carbon_calculator.activitycategory', verbose_name='Применимо к категориям активностей')),
                ('suggested_products', models.ManyToManyField(blank=True, related_name='reduction_tips', to='store.product', verbose_name='Предлагаемые товары EcoMarket')),
            ],
            options={
                'verbose_name': 'Совет по снижению следа',
                'verbose_name_plural': 'Советы по снижению следа',
                'ordering': ['-priority', 'title'],
            },
        ),
        migrations.CreateModel(
            name='UserFootprintSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(blank=True, db_index=True, max_length=40, null=True, verbose_name='Ключ сессии (для анонимов)')),
                ('inputs_data', models.JSONField(verbose_name='Введенные пользователем данные и их контекст')),
                ('total_co2_emissions_kg_annual', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Общий годовой углеродный след (кг CO2-экв.)')),
                ('category_breakdown_kg_annual', models.JSONField(blank=True, null=True, verbose_name='Годовая разбивка по категориям (кг CO2-экв.)')),
                ('calculation_version', models.CharField(default='1.0', max_length=50, verbose_name='Версия калькулятора/методологии')),
                ('calculated_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата расчета')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Сессия расчета углеродного следа',
                'verbose_name_plural': 'Сессии расчетов углеродного следа',
                'ordering': ['-calculated_at'],
            },
        ),
    ]
